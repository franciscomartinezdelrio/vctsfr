use_r("plot_ts")
library(devtools)
use_r("plot_ts")
use_testthat()
use_test()
use_package("ggplot2")
load_all()
plot_ts(3)
load_all()
plot_ts(3)
?stopifnot
?stop
load_all()
plot_ts(3)
test()
load_all()
plot_ts(USAccDeaths)
plot_ts(USAccDeaths)
ts_df
ggplot2::ggplot(ts_df, ggplot2::aes_string('x', 'y'))
load_all()
plot_ts(USAccDeaths)
load_all()
plot_ts(USAccDeaths)
load_all()
load_all()
plot_ts(USAccDeaths)
?is.logical
load_all()
plot_ts(USAccDeaths)
load_all()
plot_ts(USAccDeaths)
plot_ts(USAccDeaths, sdp = 4)
plot_ts(USAccDeaths, sdp = FALSE)
plot_ts(USAccDeaths)
?var
document()
document()
?plot.ts
load_all
load_all()
?plot.ts
document()
install()
library(vctsfr)
?plot_ts
plot_ts(USAccDeaths)
?var
?is.null
?is.atomic
is.double(3L)
?is.numeric
is.numeric(USAccDeaths)
is.ts(USAccDeaths)
is.ts(1:3)
load_all
library(devtools)
load_all()
plot_ts(USAccDeaths)
load_all()
plot_ts(USAccDeaths)
plot_ts(USAccDeaths, future = rep(9000, 5))
load_all()
plot_ts(USAccDeaths, future = rep(9000, 5))
load_all()
plot_ts(USAccDeaths, future = rep(9000, 5))
load_all()
plot_ts(USAccDeaths
)
plot_ts(USAccDeaths, future = rep(9000, 5))
load_all()
plot_ts(USAccDeaths, future = rep(9000, 5))
plot_ts(USAccDeaths)
load_all()
plot_ts(USAccDeaths, future = rep(9000, 5))
load_all()
plot_ts(USAccDeaths, future = rep(9000, 5))
plot_ts(USAccDeaths)
load_all()
plot_ts(USAccDeaths, future = rep(9000, 5))
load_all()
plot_ts(USAccDeaths, future = rep(9000, 5))
plot_ts(USAccDeaths)
plot_ts(USAccDeaths, future = TRUE)
library(vctsfr)
?plot_ts
check()
?type
check()
test()
check()
check()
use_mit_license()
check()
library(vctsfr)
load_all()
plot_ts(USAccDeaths, future = TRUE)
plot_ts(USAccDeaths, future = rep(9000, 5))
load_all()
plot_ts(USAccDeaths, future = rep(9000, 5))
check()
load_all()
test()
load_all()
test()
test()
test()
load_all()
test()
plot_ts(USAccDeaths, future = 1, prediction = c(1, 1))
load_all()
test()
load_all()
plot_ts(USAccDeaths, future = 1, prediction = c(1, 1))
plot_ts(USAccDeaths, future = rep(mean(USAccDeaths), 10), prediction = rep(tail(USAccDeaths, 1), 10))
?window
presidents
window(presidents, 1960, c(1969,4))
example(plot_ts)
library(vctsfr)
example(plot_ts)
examples(plot_ts)
document()
example(plot_ts)
library(vcsfr)
library(vctsfr)
example(plot_ts)
?plot.ts
?plot_ts
?window
library(tsfknn)
?knn_forecasting
document()
?plot_ts
library(vctsfr)
?plot_ts
example(plot_ts)
?window
plot(USAccDeaths)
frequency(USAccDeaths)
end(USAccDeaths)
?window
load_all()
document()
library(vctsfr)
example(plot_ts)
library(vctsfr)
example(plot_ts)
library(vctsfr)
example(plot_ts)
library(vctsfr)
example(plot_ts)
library(vctsfr)
example(plot_ts)
library(vctsfr)
example(plot_ts)
rep(mean(USAccDeaths, 12))
library(vctsfr)
example(plot_ts)
x <- "pepe"
paste("parameter", pepe, "should be")
paste("parameter", x, "should be")
length(NULL)
library(devtools)
test()
library(vctsfr)
example(plot_ts)
library(vctsfr)
example(plot_ts)
example(plot_ts)
library(vctsfr)
example(plot_ts)
library(vctsfr)
example(plot_ts)
p <- ts(rnorm(20, 0, 3))
frequency(p)
library(vctsfr)
frequency(p)
example(plot_ts)
?geom_ribon
?geom_ribbon
load_all()
t <- ts(rnorm(20, 0, 3))
plot_ts(t, prediction = rep(mean(t), 6), upi = rep(3, 6), lpi = rep(-3, 6))
t <- ts(rnorm(20, 0, 3))
load_all()
plot_ts(t, prediction = rep(mean(t), 6), upi = rep(3, 6), lpi = rep(-3, 6))
load_all()
plot_ts(t, prediction = rep(mean(t), 6), upi = rep(3, 6), lpi = rep(-3, 6))
load_all()
plot_ts(t, prediction = rep(mean(t), 6), upi = rep(3, 6), lpi = rep(-3, 6))
?geom_ribbon
?geom_ribbon
load_all()
plot_ts(t, prediction = rep(mean(t), 6), upi = rep(3, 6), lpi = rep(-3, 6))
load_all()
plot_ts(t, prediction = rep(mean(t), 6), upi = rep(3, 6), lpi = rep(-3, 6))
load_all()
load_all()
plot_ts(t, prediction = rep(mean(t), 6), upi = rep(3, 6), lpi = rep(-3, 6))
load_all()
load_all()
plot_ts(t, prediction = rep(mean(t), 6), upi = rep(3, 6), lpi = rep(-3, 6))
load_all()
plot_ts(t, prediction = rep(mean(t), 6), upi = rep(3, 6), lpi = rep(-3, 6))
load_all()
load_all()
plot_ts(t, prediction = rep(mean(t), 6), upi = rep(3, 6), lpi = rep(-3, 6))
load_all()
plot_ts(t, prediction = rep(mean(t), 6), upi = rep(3, 6), lpi = rep(-3, 6))
load_all()
plot_ts(t, prediction = rep(mean(t), 6), upi = rep(3, 6), lpi = rep(-3, 6))
?confint
t <- ts(rnorm(40, 0, 3)) # time series
p <- rep(mean(t), 6)     # prediction
upi <- p + qt(0.95, length(t)-1)*sd(t)/sqrt(length(t))
lpi <- p - qt(0.95, length(t)-1)*sd(t)/sqrt(length(t))
plot_ts(t, prediction = rep(mean(t), 6), upi = upi, lpi = lpi)
upi
lpi
library(forecast)
t
x <- meanf(t, h = 6, level = 90)
x$upper
qt(0.95)*sd(t)
t
qnorm(0.95)*sd(t)
mean(t) + qnorm(0.95)*sd(t)
?meanf
meanf
?rwf
rwf
t <- ts(rnorm(40, 0, 3)) # time series
p <- rep(mean(t), 6)     # prediction
upi <- p + qnorm(0.975)*sd(t)
lpi <- p - qnorm(0.975)*sd(t)
plot_ts(t, prediction = rep(mean(t), 6), upi = upi, lpi = lpi)
x$lower
document()
test()
check()
check()
t <- ts(rnorm(40, 0, 3)) # time series
p <- rep(mean(t), 6)     # prediction
upi <- p + qnorm(0.975)*sd(t)
lpi <- p - qnorm(0.975)*sd(t)
plot_ts(t, future = rep(0, 6), prediction = rep(mean(t), 6), upi = upi, lpi = lpi)
