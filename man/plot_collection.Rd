% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_collection.R
\name{plot_collection}
\alias{plot_collection}
\title{Create the associated ggplot object of a time series belonging to a
collection}
\usage{
plot_collection(collection, number, sdp = TRUE)
}
\arguments{
\item{collection}{a list with the collection of time series. See details.}

\item{number}{an integer. The number of the time series. It should be a value
between 1 and \code{length(collection)}.}

\item{sdp}{logical. Should data points be shown in the plot?}
}
\value{
The ggplot object representing the time series and its forecast.
}
\description{
Create the associated ggplot object of a time series belonging to a
collection. Apart from the time series, future values and forecasts for the
future values form part of the ggplot object.
}
\details{
The \code{collection} parameter must be a list. Each component of the list
stores a time series, its future values and its forecasts. Each component
should have the following fields with the same names and in the same order:
\itemize{
\item Historical: an object of class \code{ts} with the historical
values of the time series.
\item Future: a vector or object of class \code{ts} with the future values to be predicted.
\item Forecasts: a named list. Each component contains a vector or
object of class \code{ts} with a forecast for the future values of the
series.
}

In the example section you can see an example of a collection of time series.
}
\examples{
c <- list(
   list(Historical = window(USAccDeaths, end = c(1977, 12)),
        Future = window(USAccDeaths, start = c(1978, 1)),
        Forecasts = list(mean = rep(mean(window(USAccDeaths, end = c(1977, 12))), 12),
                         naive = rep(tail(window(USAccDeaths, end = c(1977, 12)), 1), 12)
        )
   ),
   list(Historical = window(UKDriverDeaths, end = c(1983, 12)),
        Future = window(UKDriverDeaths, start = c(1984, 1)),
        Forecasts = list(mean = rep(mean(window(UKDriverDeaths, end = c(1983, 12))), 12),
                         naive = rep(tail(window(UKDriverDeaths, end = c(1983, 12)), 1), 12)
        )
   )
)
plot_collection(c, 1)
plot_collection(c, 2)
}
